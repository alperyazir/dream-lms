/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutTeacherDashboardRouteImport } from './routes/_layout/teacher/dashboard'
import { Route as LayoutStudentDashboardRouteImport } from './routes/_layout/student/dashboard'
import { Route as LayoutPublisherDashboardRouteImport } from './routes/_layout/publisher/dashboard'
import { Route as LayoutAdminUsersRouteImport } from './routes/_layout/admin.users'
import { Route as LayoutAdminDashboardRouteImport } from './routes/_layout/admin/dashboard'
import { Route as LayoutTeacherBooksIndexRouteImport } from './routes/_layout/teacher/books/index'
import { Route as LayoutTeacherAssignmentsIndexRouteImport } from './routes/_layout/teacher/assignments/index'
import { Route as LayoutStudentAssignmentsIndexRouteImport } from './routes/_layout/student/assignments/index'
import { Route as LayoutTeacherBooksBookIdRouteImport } from './routes/_layout/teacher/books/$bookId'
import { Route as LayoutTeacherAssignmentsAssignmentIdRouteImport } from './routes/_layout/teacher/assignments/$assignmentId'
import { Route as LayoutStudentAssignmentsAssignmentIdPlayRouteImport } from './routes/_layout/student/assignments/$assignmentId/play'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeacherDashboardRoute = LayoutTeacherDashboardRouteImport.update({
  id: '/teacher/dashboard',
  path: '/teacher/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutStudentDashboardRoute = LayoutStudentDashboardRouteImport.update({
  id: '/student/dashboard',
  path: '/student/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPublisherDashboardRoute =
  LayoutPublisherDashboardRouteImport.update({
    id: '/publisher/dashboard',
    path: '/publisher/dashboard',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutAdminUsersRoute = LayoutAdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAdminDashboardRoute = LayoutAdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeacherBooksIndexRoute = LayoutTeacherBooksIndexRouteImport.update({
  id: '/teacher/books/',
  path: '/teacher/books/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeacherAssignmentsIndexRoute =
  LayoutTeacherAssignmentsIndexRouteImport.update({
    id: '/teacher/assignments/',
    path: '/teacher/assignments/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutStudentAssignmentsIndexRoute =
  LayoutStudentAssignmentsIndexRouteImport.update({
    id: '/student/assignments/',
    path: '/student/assignments/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutTeacherBooksBookIdRoute =
  LayoutTeacherBooksBookIdRouteImport.update({
    id: '/teacher/books/$bookId',
    path: '/teacher/books/$bookId',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutTeacherAssignmentsAssignmentIdRoute =
  LayoutTeacherAssignmentsAssignmentIdRouteImport.update({
    id: '/teacher/assignments/$assignmentId',
    path: '/teacher/assignments/$assignmentId',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutStudentAssignmentsAssignmentIdPlayRoute =
  LayoutStudentAssignmentsAssignmentIdPlayRouteImport.update({
    id: '/student/assignments/$assignmentId/play',
    path: '/student/assignments/$assignmentId/play',
    getParentRoute: () => LayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/admin/dashboard': typeof LayoutAdminDashboardRoute
  '/admin/users': typeof LayoutAdminUsersRoute
  '/publisher/dashboard': typeof LayoutPublisherDashboardRoute
  '/student/dashboard': typeof LayoutStudentDashboardRoute
  '/teacher/dashboard': typeof LayoutTeacherDashboardRoute
  '/teacher/assignments/$assignmentId': typeof LayoutTeacherAssignmentsAssignmentIdRoute
  '/teacher/books/$bookId': typeof LayoutTeacherBooksBookIdRoute
  '/student/assignments': typeof LayoutStudentAssignmentsIndexRoute
  '/teacher/assignments': typeof LayoutTeacherAssignmentsIndexRoute
  '/teacher/books': typeof LayoutTeacherBooksIndexRoute
  '/student/assignments/$assignmentId/play': typeof LayoutStudentAssignmentsAssignmentIdPlayRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/admin/dashboard': typeof LayoutAdminDashboardRoute
  '/admin/users': typeof LayoutAdminUsersRoute
  '/publisher/dashboard': typeof LayoutPublisherDashboardRoute
  '/student/dashboard': typeof LayoutStudentDashboardRoute
  '/teacher/dashboard': typeof LayoutTeacherDashboardRoute
  '/teacher/assignments/$assignmentId': typeof LayoutTeacherAssignmentsAssignmentIdRoute
  '/teacher/books/$bookId': typeof LayoutTeacherBooksBookIdRoute
  '/student/assignments': typeof LayoutStudentAssignmentsIndexRoute
  '/teacher/assignments': typeof LayoutTeacherAssignmentsIndexRoute
  '/teacher/books': typeof LayoutTeacherBooksIndexRoute
  '/student/assignments/$assignmentId/play': typeof LayoutStudentAssignmentsAssignmentIdPlayRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/admin/dashboard': typeof LayoutAdminDashboardRoute
  '/_layout/admin/users': typeof LayoutAdminUsersRoute
  '/_layout/publisher/dashboard': typeof LayoutPublisherDashboardRoute
  '/_layout/student/dashboard': typeof LayoutStudentDashboardRoute
  '/_layout/teacher/dashboard': typeof LayoutTeacherDashboardRoute
  '/_layout/teacher/assignments/$assignmentId': typeof LayoutTeacherAssignmentsAssignmentIdRoute
  '/_layout/teacher/books/$bookId': typeof LayoutTeacherBooksBookIdRoute
  '/_layout/student/assignments/': typeof LayoutStudentAssignmentsIndexRoute
  '/_layout/teacher/assignments/': typeof LayoutTeacherAssignmentsIndexRoute
  '/_layout/teacher/books/': typeof LayoutTeacherBooksIndexRoute
  '/_layout/student/assignments/$assignmentId/play': typeof LayoutStudentAssignmentsAssignmentIdPlayRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/settings'
    | '/'
    | '/admin/dashboard'
    | '/admin/users'
    | '/publisher/dashboard'
    | '/student/dashboard'
    | '/teacher/dashboard'
    | '/teacher/assignments/$assignmentId'
    | '/teacher/books/$bookId'
    | '/student/assignments'
    | '/teacher/assignments'
    | '/teacher/books'
    | '/student/assignments/$assignmentId/play'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/settings'
    | '/'
    | '/admin/dashboard'
    | '/admin/users'
    | '/publisher/dashboard'
    | '/student/dashboard'
    | '/teacher/dashboard'
    | '/teacher/assignments/$assignmentId'
    | '/teacher/books/$bookId'
    | '/student/assignments'
    | '/teacher/assignments'
    | '/teacher/books'
    | '/student/assignments/$assignmentId/play'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/admin/dashboard'
    | '/_layout/admin/users'
    | '/_layout/publisher/dashboard'
    | '/_layout/student/dashboard'
    | '/_layout/teacher/dashboard'
    | '/_layout/teacher/assignments/$assignmentId'
    | '/_layout/teacher/books/$bookId'
    | '/_layout/student/assignments/'
    | '/_layout/teacher/assignments/'
    | '/_layout/teacher/books/'
    | '/_layout/student/assignments/$assignmentId/play'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teacher/dashboard': {
      id: '/_layout/teacher/dashboard'
      path: '/teacher/dashboard'
      fullPath: '/teacher/dashboard'
      preLoaderRoute: typeof LayoutTeacherDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/student/dashboard': {
      id: '/_layout/student/dashboard'
      path: '/student/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof LayoutStudentDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/publisher/dashboard': {
      id: '/_layout/publisher/dashboard'
      path: '/publisher/dashboard'
      fullPath: '/publisher/dashboard'
      preLoaderRoute: typeof LayoutPublisherDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/admin/users': {
      id: '/_layout/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof LayoutAdminUsersRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/admin/dashboard': {
      id: '/_layout/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof LayoutAdminDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teacher/books/': {
      id: '/_layout/teacher/books/'
      path: '/teacher/books'
      fullPath: '/teacher/books'
      preLoaderRoute: typeof LayoutTeacherBooksIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teacher/assignments/': {
      id: '/_layout/teacher/assignments/'
      path: '/teacher/assignments'
      fullPath: '/teacher/assignments'
      preLoaderRoute: typeof LayoutTeacherAssignmentsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/student/assignments/': {
      id: '/_layout/student/assignments/'
      path: '/student/assignments'
      fullPath: '/student/assignments'
      preLoaderRoute: typeof LayoutStudentAssignmentsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teacher/books/$bookId': {
      id: '/_layout/teacher/books/$bookId'
      path: '/teacher/books/$bookId'
      fullPath: '/teacher/books/$bookId'
      preLoaderRoute: typeof LayoutTeacherBooksBookIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teacher/assignments/$assignmentId': {
      id: '/_layout/teacher/assignments/$assignmentId'
      path: '/teacher/assignments/$assignmentId'
      fullPath: '/teacher/assignments/$assignmentId'
      preLoaderRoute: typeof LayoutTeacherAssignmentsAssignmentIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/student/assignments/$assignmentId/play': {
      id: '/_layout/student/assignments/$assignmentId/play'
      path: '/student/assignments/$assignmentId/play'
      fullPath: '/student/assignments/$assignmentId/play'
      preLoaderRoute: typeof LayoutStudentAssignmentsAssignmentIdPlayRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAdminDashboardRoute: typeof LayoutAdminDashboardRoute
  LayoutAdminUsersRoute: typeof LayoutAdminUsersRoute
  LayoutPublisherDashboardRoute: typeof LayoutPublisherDashboardRoute
  LayoutStudentDashboardRoute: typeof LayoutStudentDashboardRoute
  LayoutTeacherDashboardRoute: typeof LayoutTeacherDashboardRoute
  LayoutTeacherAssignmentsAssignmentIdRoute: typeof LayoutTeacherAssignmentsAssignmentIdRoute
  LayoutTeacherBooksBookIdRoute: typeof LayoutTeacherBooksBookIdRoute
  LayoutStudentAssignmentsIndexRoute: typeof LayoutStudentAssignmentsIndexRoute
  LayoutTeacherAssignmentsIndexRoute: typeof LayoutTeacherAssignmentsIndexRoute
  LayoutTeacherBooksIndexRoute: typeof LayoutTeacherBooksIndexRoute
  LayoutStudentAssignmentsAssignmentIdPlayRoute: typeof LayoutStudentAssignmentsAssignmentIdPlayRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAdminDashboardRoute: LayoutAdminDashboardRoute,
  LayoutAdminUsersRoute: LayoutAdminUsersRoute,
  LayoutPublisherDashboardRoute: LayoutPublisherDashboardRoute,
  LayoutStudentDashboardRoute: LayoutStudentDashboardRoute,
  LayoutTeacherDashboardRoute: LayoutTeacherDashboardRoute,
  LayoutTeacherAssignmentsAssignmentIdRoute:
    LayoutTeacherAssignmentsAssignmentIdRoute,
  LayoutTeacherBooksBookIdRoute: LayoutTeacherBooksBookIdRoute,
  LayoutStudentAssignmentsIndexRoute: LayoutStudentAssignmentsIndexRoute,
  LayoutTeacherAssignmentsIndexRoute: LayoutTeacherAssignmentsIndexRoute,
  LayoutTeacherBooksIndexRoute: LayoutTeacherBooksIndexRoute,
  LayoutStudentAssignmentsAssignmentIdPlayRoute:
    LayoutStudentAssignmentsAssignmentIdPlayRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
