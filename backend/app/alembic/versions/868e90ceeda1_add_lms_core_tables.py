"""add_lms_core_tables

Revision ID: 868e90ceeda1
Revises: 0550ee3485d1
Create Date: 2025-10-27 22:14:04.708260

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '868e90ceeda1'
down_revision = '0550ee3485d1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('dream_storage_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('publisher_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['publisher_id'], ['publishers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dream_storage_id')
    )
    op.create_index(op.f('ix_books_publisher_id'), 'books', ['publisher_id'], unique=False)
    op.create_table('activities',
    sa.Column('dream_activity_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('activity_type', sa.Enum('dragdroppicture', 'dragdroppicturegroup', 'matchTheWords', 'circle', 'markwithx', 'puzzleFindWords', name='activitytype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('config_json', sa.JSON(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activities_book_id'), 'activities', ['book_id'], unique=False)
    op.create_index('ix_activities_activity_type', 'activities', ['activity_type'], unique=False)
    op.create_table('assignments',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('time_limit_minutes', sa.Integer(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('teacher_id', sa.Uuid(), nullable=False),
    sa.Column('activity_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignments_activity_id'), 'assignments', ['activity_id'], unique=False)
    op.create_index(op.f('ix_assignments_book_id'), 'assignments', ['book_id'], unique=False)
    op.create_index(op.f('ix_assignments_teacher_id'), 'assignments', ['teacher_id'], unique=False)
    op.create_index('ix_assignments_due_date', 'assignments', ['due_date'], unique=False)
    op.create_table('classes',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('grade_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('academic_year', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('teacher_id', sa.Uuid(), nullable=False),
    sa.Column('school_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_school_id'), 'classes', ['school_id'], unique=False)
    op.create_index(op.f('ix_classes_teacher_id'), 'classes', ['teacher_id'], unique=False)
    op.create_index('ix_classes_is_active', 'classes', ['is_active'], unique=False)
    op.create_table('assignment_students',
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'completed', name='assignmentstatus'), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('answers_json', sa.JSON(), nullable=True),
    sa.Column('progress_json', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=False),
    sa.Column('last_saved_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('assignment_id', sa.Uuid(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('assignment_id', 'student_id', name='uq_assignment_student')
    )
    op.create_index(op.f('ix_assignment_students_assignment_id'), 'assignment_students', ['assignment_id'], unique=False)
    op.create_index(op.f('ix_assignment_students_student_id'), 'assignment_students', ['student_id'], unique=False)
    op.create_index('ix_assignment_students_status', 'assignment_students', ['status'], unique=False)
    op.create_index('ix_assignment_students_completed_at', 'assignment_students', ['completed_at'], unique=False)
    op.create_table('class_students',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('class_id', sa.Uuid(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.Column('enrolled_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_id', 'student_id', name='uq_class_student')
    )
    op.create_index(op.f('ix_class_students_class_id'), 'class_students', ['class_id'], unique=False)
    op.create_index(op.f('ix_class_students_student_id'), 'class_students', ['student_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_class_students_student_id'), table_name='class_students')
    op.drop_index(op.f('ix_class_students_class_id'), table_name='class_students')
    op.drop_table('class_students')
    op.drop_index('ix_assignment_students_completed_at', table_name='assignment_students')
    op.drop_index('ix_assignment_students_status', table_name='assignment_students')
    op.drop_index(op.f('ix_assignment_students_student_id'), table_name='assignment_students')
    op.drop_index(op.f('ix_assignment_students_assignment_id'), table_name='assignment_students')
    op.drop_table('assignment_students')
    op.drop_index('ix_classes_is_active', table_name='classes')
    op.drop_index(op.f('ix_classes_teacher_id'), table_name='classes')
    op.drop_index(op.f('ix_classes_school_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index('ix_assignments_due_date', table_name='assignments')
    op.drop_index(op.f('ix_assignments_teacher_id'), table_name='assignments')
    op.drop_index(op.f('ix_assignments_book_id'), table_name='assignments')
    op.drop_index(op.f('ix_assignments_activity_id'), table_name='assignments')
    op.drop_table('assignments')
    op.drop_index('ix_activities_activity_type', table_name='activities')
    op.drop_index(op.f('ix_activities_book_id'), table_name='activities')
    op.drop_table('activities')
    op.drop_index(op.f('ix_books_publisher_id'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
